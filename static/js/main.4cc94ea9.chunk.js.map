{"version":3,"sources":["components/home/components/header.js","components/home/components/topscroll.js","components/home/components/footer.js","components/home/home.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","className","fixed","sticky","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","React","Component","items","src","altText","caption","TopScroll","activeIndex","next","previous","goToIndex","onExiting","onExited","animating","nextIndex","length","newIndex","_this2","slides","map","item","CarouselItem","key","alt","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","Footer","Spin","Spinner","Home","loading","dist_default","home_Spin","header_Header","topscroll","footer","App","home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cc94ea9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\n\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar className=\"header navbar navbar-expand-md navbar-light bg-faded\" fixed=\"top\" sticky={true} color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">AggyLogo</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\">Investment</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\">Login</NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Dropdown\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    Dropdown 1\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                  Dropdown 2\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>\r\n                    Reset\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\n\r\n  \r\n  const items = [\r\n    {\r\n      src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n      altText: 'Slide 1',\r\n      caption: 'Slide 1'\r\n    },\r\n    {\r\n      src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n      altText: 'Slide 2',\r\n      caption: 'Slide 2'\r\n    },\r\n    {\r\n      src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n      altText: 'Slide 3',\r\n      caption: 'Slide 3'\r\n    }\r\n  ];\r\n  \r\n  class TopScroll extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { activeIndex: 0 };\r\n      this.next = this.next.bind(this);\r\n      this.previous = this.previous.bind(this);\r\n      this.goToIndex = this.goToIndex.bind(this);\r\n      this.onExiting = this.onExiting.bind(this);\r\n      this.onExited = this.onExited.bind(this);\r\n    }\r\n  \r\n    onExiting() {\r\n      this.animating = true;\r\n    }\r\n  \r\n    onExited() {\r\n      this.animating = false;\r\n    }\r\n  \r\n    next() {\r\n      if (this.animating) return;\r\n      const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\r\n      this.setState({ activeIndex: nextIndex });\r\n    }\r\n  \r\n    previous() {\r\n      if (this.animating) return;\r\n      const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\r\n      this.setState({ activeIndex: nextIndex });\r\n    }\r\n  \r\n    goToIndex(newIndex) {\r\n      if (this.animating) return;\r\n      this.setState({ activeIndex: newIndex });\r\n    }\r\n  \r\n    render() {\r\n      const { activeIndex } = this.state;\r\n  \r\n      const slides = items.map((item) => {\r\n        return (\r\n          <CarouselItem\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n            key={item.src}\r\n          >\r\n            <img src={item.src} alt={item.altText} />\r\n            <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n          </CarouselItem>\r\n        );\r\n      });\r\n  \r\n      return (\r\n        <Carousel\r\n          activeIndex={activeIndex}\r\n          next={this.next}\r\n          previous={this.previous}\r\n        >\r\n          <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\r\n          {slides}\r\n          <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n          <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n        </Carousel>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  export default TopScroll;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <p><b>About Aggy Investment:</b>  We are a business management consultancy firm that engages in creation, management and maximization of returns on investment for individuals and corporate clients. We also engage in budgetary and advisory services for our clients.</p>\r\n            <p><b>Our Vision:</b>  We are a business management consultancy firm that engages in creation, management and maximization of returns on investment for individuals and corporate clients. We also engage in budgetary and advisory services for our clients.</p>\r\n            <p><b>Our Mission</b>  We are a business management consultancy firm that engages in creation, management and maximization of returns on investment for individuals and corporate clients. We also engage in budgetary and advisory services for our clients.</p>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Footer;","import React from 'react';\r\nimport Header from './components/header';\r\nimport TopScroll from './components/topscroll';\r\nimport Footer from './components/footer';\r\nimport TopBarLoader from 'react-top-bar-loader'\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nclass Spin extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Spinner color=\"info\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Home extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    spin(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <TopBarLoader />\r\n                <Spin/>\r\n                <Header />\r\n                <TopScroll />\r\n                <Footer />\r\n            </div>)\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './components/home/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}